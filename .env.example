# Archivo de ejemplo de variables de entorno para el Asistente Legal Constitucional con IA
# 
# IMPORTANTE: 
# - NO commitees este archivo con valores reales
# - Copia este archivo como .env y completa con tus valores reales
# - El archivo .env debe estar en .gitignore
#
# Para desarrollo local: cp .env.example .env
# Para producción en Render: configura estas variables en el dashboard

# =============================================================================
# CONFIGURACIÓN DE BASE DE DATOS
# =============================================================================

# URL completa de conexión a PostgreSQL
# Formato: postgresql://usuario:contraseña@host:puerto/database
# Render proporciona esto automáticamente cuando creas un servicio PostgreSQL
DATABASE_URL=postgresql://leyia:leyia@localhost:5432/leyia

# Alternativa: componentes individuales (si no usas DATABASE_URL)
POSTGRES_USER=leyia
POSTGRES_PASSWORD=leyia
POSTGRES_DB=leyia
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# =============================================================================
# CONFIGURACIÓN DE APIs DE IA
# =============================================================================

# OpenAI API Key (REQUERIDA)
# Obtén tu clave en: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-tu-clave-de-openai-aqui

# AssemblyAI API Key (REQUERIDA para transcripción de audio)
# Obtén tu clave en: https://www.assemblyai.com/dashboard
ASSEMBLYAI_API_KEY=tu-clave-de-assemblyai-aqui

# Tavily API Key (REQUERIDA para búsqueda web)
# Obtén tu clave en: https://tavily.com/
TAVILY_API_KEY=tu-clave-de-tavily-aqui

# =============================================================================
# CONFIGURACIÓN DE REFLEX
# =============================================================================

# Entorno de ejecución (dev o prod)
# dev: modo desarrollo con hot reload
# prod: modo producción optimizado
REFLEX_ENV=dev

# Puerto del backend (API de Reflex)
PORT=8000

# Puerto del frontend (Next.js)
FRONTEND_PORT=3000

# URL del frontend (para CORS)
# En desarrollo local: http://localhost:3000
# En producción: https://tu-app.onrender.com
FRONTEND_URL=http://localhost:3000

# =============================================================================
# CONFIGURACIÓN DE REDIS (OPCIONAL)
# =============================================================================

# Redis es opcional pero recomendado para producción
# Mejora el rendimiento del manejo de estado de Reflex
# Formato: redis://host:puerto
# O para Redis con autenticación: redis://:password@host:puerto
REDIS_URL=redis://localhost:6379

# =============================================================================
# CONFIGURACIÓN DE MIGRACIONES (DOCKER/RENDER)
# =============================================================================

# Ejecutar migraciones automáticamente al iniciar (1=sí, 0=no)
RUN_MIGRATIONS=1

# Número de reintentos para esperar a que la BD esté lista
DB_WAIT_RETRIES=60

# Intervalo en segundos entre reintentos de conexión a BD
DB_WAIT_INTERVAL=2

# =============================================================================
# CONFIGURACIÓN ADICIONAL DE PRODUCCIÓN
# =============================================================================

# Indica si la app está ejecutándose en Render
# (No configurar manualmente, Render lo establece automáticamente)
# RENDER=true

# URL externa del servicio en Render
# (No configurar manualmente, Render lo establece automáticamente)
# RENDER_EXTERNAL_URL=https://tu-app.onrender.com

# Exportar frontend como sitio estático (1=sí, 0=no)
# Solo para casos específicos, normalmente no es necesario
EXPORT_FRONTEND=0

# =============================================================================
# CONFIGURACIÓN DE SEGURIDAD (PRODUCCIÓN)
# =============================================================================

# Clave secreta para sesiones (generar una única para producción)
# Puedes generarla con: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=tu-clave-secreta-muy-larga-y-aleatoria

# Dominio permitido (para CORS)
ALLOWED_HOSTS=localhost,127.0.0.1

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================

# 1. DESARROLLO LOCAL:
#    - Copia este archivo: cp .env.example .env
#    - Completa tus claves de API reales
#    - Usa docker-compose up para ejecutar localmente

# 2. PRODUCCIÓN EN RENDER:
#    - NO subas el archivo .env al repositorio
#    - Configura todas las variables en el dashboard de Render
#    - Render proporciona DATABASE_URL automáticamente
#    - Render establece PORT automáticamente

# 3. SEGURIDAD:
#    - NUNCA commitees archivos .env con claves reales
#    - Rota tus claves regularmente
#    - Usa claves diferentes para desarrollo y producción
#    - Mantén un backup seguro de tus claves de producción

# 4. CLAVES DE API GRATUITAS:
#    - OpenAI: Plan de pago (créditos gratuitos iniciales)
#    - AssemblyAI: Plan gratuito con limitaciones
#    - Tavily: Plan gratuito con limitaciones

# 5. REFERENCIAS:
#    - Documentación de Reflex: https://reflex.dev/docs
#    - Documentación de Render: https://render.com/docs
#    - Ver RENDER_DEPLOY.md para guía completa de despliegue
